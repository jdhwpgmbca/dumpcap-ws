<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.rtds</groupId>
  <artifactId>pcapture</artifactId>
  <version>3.13.0</version>
  <description> 
      Packet capture frontend for packet capture command-line tools such as
      tcpdump and dumpcap.
  </description>
  <properties>

    <!-- The branding properties are displayed on the web page. -->
    
    <branding.title>PCapture</branding.title>
    <branding.description>A web frontend for command-line based packet capture tools.</branding.description>
    
    <!-- Project properties that determine how the project is compiled. -->
    
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>2.1.2.Final</quarkus.platform.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    
    <!-- Authentication and authorization related properties. -->
    
    <auth.server-url>https://your.keycloak.server</auth.server-url>
    <auth.realm>your-keycloak-realm</auth.realm>
    
    <auth.frontend.ssl-required>external</auth.frontend.ssl-required>
    <auth.frontend.client-id>frontend-client</auth.frontend.client-id>
    <auth.frontend.client-confidential-port>443</auth.frontend.client-confidential-port>
    
    <auth.backend.client-id>backend-service</auth.backend.client-id>
    <auth.backend.secret>secret</auth.backend.secret>
    <auth.backend.tls-verification>required</auth.backend.tls-verification>
    
    <!-- These next properties are only used when Quarkus is used in prod mode. -->
    
    <prod.keystore-file>./server-cert-and-key.pfx</prod.keystore-file>
    <prod.keystore-password>changeme</prod.keystore-password>
    <prod.ssl-port>443</prod.ssl-port>
    <prod.http.port>80</prod.http.port>
    <prod.insecure-requests>redirect</prod.insecure-requests>
    <prod.ssl-native>true</prod.ssl-native>
    
    <!-- The JDBC URLs: There's also an override in the container profile for the
        different filesystem layout that's used. -->
    
    <data.directory>${basedir}/data</data.directory>

    <jdbc.kind>h2</jdbc.kind>    
    <jdbc.username>dumcap-user</jdbc.username>
    <jdbc.password>changeme</jdbc.password>

    <dev.jdbc.url>jdbc:h2:file:${data.directory}/h2db</dev.jdbc.url>
    <test.jdbc.url>jdbc:h2:mem:test</test.jdbc.url>
    <prod.jdbc.url>jdbc:h2:file:${data.directory}/h2db</prod.jdbc.url>
    
    <start-capture-script>${project.basedir}/src/main/resources/startCaptureScript.ps1</start-capture-script>
    
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-oidc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-h2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-agroal</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>    
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-junit5-mockito</artifactId>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-security</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
          <exclude>**/*.xml</exclude>
          <exclude>**/*.css</exclude>
          <exclude>**/*.js</exclude>
          <exclude>**/*.ini</exclude>
          <exclude>**/*.yml</exclude>
          <exclude>**/*.json</exclude>
          <exclude>**/*.html</exclude>
        </excludes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.css</include>
          <include>**/*.js</include>
          <include>**/*.ini</include>
          <include>**/*.yml</include>
          <include>**/*.json</include>
          <include>**/*.html</include>
        </includes>
      </resource>
      <resource>
          <filtering>true</filtering>
          <directory>src/main/docker</directory>
          <targetPath>../docker</targetPath>
          <includes>
              <include>Dockerfile.*</include>
          </includes>
      </resource>
      <resource>
          <filtering>true</filtering>
          <directory>src/main/win64svc</directory>
          <targetPath>../win64svc</targetPath>
          <includes>
              <include>**/*.xml</include>
              <include>**/*.ps1</include>
          </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
          <exclude>**/*.xml</exclude>
          <exclude>**/*.css</exclude>
          <exclude>**/*.js</exclude>
          <exclude>**/*.ini</exclude>
          <exclude>**/*.yml</exclude>
        </excludes>
      </testResource>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.css</include>
          <include>**/*.js</include>
          <include>**/*.ini</include>
          <include>**/*.yml</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
          <groupId>com.googlecode.maven-download-plugin</groupId>
          <artifactId>download-maven-plugin</artifactId>
          <version>1.6.6</version>
          <executions>
              <execution>
                  <id>download-wrapper</id>
                  <phase>process-resources</phase>
                  <goals>
                      <goal>wget</goal>
                  </goals>
                  <configuration>
                    <uri>https://github.com/winsw/winsw/releases/download/v2.11.0/WinSW.NET4.exe</uri>
                    <unpack>false</unpack>
                    <outputDirectory>${project.build.directory}/win64svc</outputDirectory>
                    <outputFileName>dumpcap-ws.exe</outputFileName>
                    <sha256>abe54e1dba743fdf0403e33c1f9e6807800a2f9acd3d3101002cf59f3f2dea62</sha256>
                  </configuration>
              </execution>
              <execution>
                  <id>download-openjdk</id>
                  <phase>process-resources</phase>
                  <goals>
                      <goal>wget</goal>
                  </goals>
                  <configuration>
                    <url>https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_x64_windows_hotspot_11.0.11_9.zip</url>
                    <unpack>true</unpack>
                    <outputDirectory>${project.build.directory}/win64svc</outputDirectory>
                    <sha256>a7377fb0807fa619de49eec02ad7e2110c257649341f5ccffbaafa43cc8cbcc8</sha256>
                  </configuration>
              </execution>
          </executions>
      </plugin>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <parameters>${maven.compiler.parameters}</parameters>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
          <!--<argLine>@{argLine}</argLine>-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.60</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <name>Linux</name>
        </os>
      </activation>
      <properties>
        <start-capture-script>${project.basedir}/src/main/resources/startCaptureScript.sh</start-capture-script>
      </properties>
    </profile>
    <profile>
      <id>container</id>
      <properties>
        <prod.jdbc.url>jdbc:h2:file:/deployments/h2db</prod.jdbc.url>
        <start-capture-script>/deployments/startCaptureScript.sh</start-capture-script>
        <!-- Tests are skipped because the startCaptureScript path above isn't accessible outside the container. -->
        <skipTests>true</skipTests>
      </properties>
    </profile>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>
